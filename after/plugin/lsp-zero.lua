-- local lua = require 'cmp_nvim_lua'
-- local items = lua.items
-- lua.items = function(...)
--   local r = items(...)
-- --  vim.fn.writefile({"hello"}, "/tmp/testt")
--   return r
-- end
-- 
-- local lsp = require 'lsp-zero'
-- lsp.preset 'recommended'
-- 
-- -- lsp.ensure_installed {
-- --   'tsserver',
-- --   'eslint',
-- --   'sumneko_lua',
-- --   'rust_analyzer',
-- -- }
-- 
-- --[[
-- lsp.configure('sumneko_lua', {
--   settings = {
--     Lua = {
--       diagnostics = {
--         globals = { 'vim' },
--       },
--     },
--   },
--   workspace = {
--     -- Make the server aware of Neovim runtime files
--     library = vim.api.nvim_get_runtime_file('', true),
--   },
--   telemetry = {
--     enable = false,
--   },
-- })
-- ]]--
-- 
-- local has_words_before = function()
--   unpack = unpack or table.unpack
--   local line, col = unpack(vim.api.nvim_win_get_cursor(0))
--   return col ~= 0 and vim.api.nvim_buf_get_lines(0, line - 1, line, true)[1]:sub(col, col):match '%s' == nil
-- end
-- 
-- --[[
-- local luasnip = require 'luasnip'
-- local cmp = require 'cmp'
-- local cmp_select = { behavior = cmp.SelectBehavior.Select }
-- local cmp_mappings = lsp.defaults.cmp_mappings {
--   ['<C-p>'] = cmp.mapping.select_prev_item(cmp_select),
--   ['<C-n>'] = cmp.mapping.select_prev_item(cmp_select),
--   ['<C-y>'] = cmp.mapping.confirm { select = true },
--   ['<C-Space>'] = cmp.mapping.complete(),
--   ['<Tab>'] = cmp.mapping(function(fallback)
--     if cmp.visible() then
--       cmp.select_next_item()
--     elseif luasnip.expand_or_jumpable() then
--       luasnip.expand_or_jump()
--     elseif has_words_before() then
--       cmp.complete()
--     else
--       fallback()
--     end
--   end, { 'i', 's' }),
-- 
--   ['<S-Tab>'] = cmp.mapping(function(fallback)
--     if cmp.visible() then
--       cmp.select_prev_item()
--     elseif luasnip.jumpable(-1) then
--       luasnip.jump(-1)
--     else
--       fallback()
--     end
--   end, { 'i', 's' }),
-- }
-- 
-- lsp.setup_nvim_cmp {
--   mapping = cmp_mappings,
-- }
-- --]]
-- 
-- lsp.setup()
